# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
        
      - name: Checkmarx CxFlow Action
      # You may pin to the exact commit or the version.
      # uses: checkmarx-ts/checkmarx-cxflow-github-action@fe2a395cbbee31268470d92b6c53ebc483005f0f
        uses: checkmarx-ts/checkmarx-cxflow-github-action@v1.1
        with:
    # Provide Checkmarx URL
          checkmarx_url: ${{ secrets.CX_PRIVATECLOUD_URL}}
    # Select a Checkmarx Team
          team: ${{ secrets.CX_PRIVATECLOUD_TEAM }}
    # Provide Checkmarx Username
          checkmarx_username: ${{ secrets.CX_PRIVATECLOUD_USERNAME }}
    # Provide Checkmarx Password
          checkmarx_password: ${{ secrets.CX_PRIVATECLOUD_PASSWORD }}
    # Provide Checkmarx Client Secret
          checkmarx_client_secret: ${{ secrets.CX_CLIENT_SECRET }}
    # Select a Checkmarx Project
          project:  ${{ GITHUB.REPOSITORY }}
    # Select an Application Name used by downstream bug tracker systems
          app: ${{ GITHUB.REPOSITORY }}
    # Select a Checkmarx Preset
          preset: 'Checkmarx Express'
    # Break build based on Checkmarx findings?
    # break_build: # optional
    # Bug tracker for the scan results.
          bug_tracker: GitHub
    # Incremental Scans?
    # incremental: # optional, default is true
    # Additional CLI parameters
          params: --cx-flow.filter-severity=High
    # GitHub API Token
          github_token: ${{ secrets.GITHUBTOKEN }}
    # Vulnerability Scanners (sast, sca, ast, cxgo)
          scanners: sast 
    # Provide SCA API URL
    # sca_api_url: # optional, default is https://api.scacheckmarx.com
    # Provide SCA APP URL
    # sca_app_url: # optional, default is https://sca.scacheckmarx.com
    # Provide SCA Access Control URL
    # sca_access_control_url: # optional, default is https://platform.checkmarx.net
    # Provide SCA Tenant
    # sca_tenant: # optional, default is 
    # Provide SCA Username
    # sca_username: # optional, default is 
    # Provide SCA Password
    # sca_password: # optional, default is 
    # Provide CxGo Client Secret
 

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
