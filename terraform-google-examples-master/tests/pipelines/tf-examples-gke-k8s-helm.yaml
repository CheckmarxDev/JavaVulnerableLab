# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

jobs:
###
# run-example-gke-k8s-helm
###
- name: run-example-gke-k8s-helm
  serial: true
  plan:
  - get: once-a-day
    trigger: true

  - get: git
    trigger: false

  - task: run-example-gke-k8s-helm
    params:
      git_src: git
      git_target: git
      service_account_json: ((regression-project.service_account_json))
      project_id: ((regression-project.project_id))
      backend_bucket: {{backend_bucket}}
      backend_prefix: terraform-google-examples/
      env_name: tf-ci-gke-k8s-helm
      example_dir: example-gke-k8s-helm
      region: us-west1
      zone: us-west1-b
      init_script: |        
        # Install helm
        curl https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get > get_helm.sh
        chmod 700 get_helm.sh
        ./get_helm.sh

        helm init --client-only

        # Install helm provider
        wget https://github.com/mcuadros/terraform-provider-helm/releases/download/v0.5.1/terraform-provider-helm_v0.5.1_linux_amd64.tar.gz
        tar -xvf terraform-provider-helm*.tar.gz

        mkdir -p ~/.terraform.d/plugins/
        mv terraform-provider-helm*/terraform-provider-helm ~/.terraform.d/plugins/

        cat > terraform.tfvars <<EOF
        helm_version = "$(helm version -c --short | egrep -o 'v[0-9]*.[0-9]*.[0-9]*')"
        acme_email = {{maintainer_email}}
        EOF

        cat terraform.tfvars

      TF_VAR_network_name: tf-ci-gke-k8s-helm
      TF_VAR_region: us-west1
      TF_VAR_zone: us-west1-b
      TF_VAR_acme_url: "https://acme-staging.api.letsencrypt.org/directory"
    on_failure:
      put: send-an-email
      params:
        subject: email/subject-failed
        body: email/body-failed
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: gcr.io/cloud-solutions-group/tf-run-example
          tag: latest
      inputs:
      - name: git
      - name: git-pull-requests
        optional: true
      outputs:
      - name: email
      run: {path: /opt/run-example.sh}

###
# Resource types
###
resource_types:
- name: git
  type: docker-image
  source:
    repository: concourse/git-resource

- name: time
  type: docker-image
  source:
    repository: concourse/time-resource

- name: email
  type: docker-image
  source:
    repository: pcfseceng/email-resource

###
# Resources
###
resources:
- name: git
  type: git
  source:
    uri: {{uri}}
    branch: {{branch}}

- name: once-a-day
  type: time
  source:
    interval: 1440m

- name: send-an-email
  type: email
  source:
    smtp:
      host: ((common.smtp_host))
      port: ((common.smtp_port))
      username: ((common.smtp_username))
      password: ((common.smtp_password))
    from: concourse-tf@gcp.solutions
    to: [ {{maintainer_email}} ]
